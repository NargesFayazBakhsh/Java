import java.util.Scanner;

public class Perseptron {
    
     public static void main(String[] args) {
      Scanner s = new Scanner(System.in);

/*
      String r = "";
      for(int j = 0 ; j< 9 ;j++) {
          String xx = s.next();
          for(int i=0 ; i<xx.length() ; i++) {
              if (xx.charAt(i) == '.')
                  r = r + "-1" + ",";

              if (xx.charAt(i) == '#')
                  r = r + "1" + ",";

          }
      }*/

      //1A
         int [] x = {-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,1,1,1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,1,1,1,-1,1,1,1,-1};
//B
         int [] x1 = {1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,-1};
//C
         int [] x2 = {-1,-1,1,1,1,1,1,-1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1};
//d
         int [] x3 = {1,1,1,1,1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,1,-1,1,1,1,1,1,-1,-1};
//e
         int [] x4 = {1,1,1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1};
   //j
         int [] x5 = {-1,-1,-1,1,1,1,1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,1,1,1,-1,-1};


         double [] tt = {1,-1,-1,-1,-1,-1,-1};
         //,{-1,1,-1,-1,-1,-1,-1},{-1,-1,1,-1,-1,-1,-1},{-1,-1,-1,1,-1,-1,-1},{-1,-1,-1,-1,1,-1,-1},{-1,-1,-1,-1,-1,1,-1},{-1,-1,-1,-1,-1,-1,1}};

     }
      public static void per(int [] xx , double [] tt){
             int[][] x = {{1, 1, 1, 1, 1}, {-1, 1, -1, -1, 1}, {1, 1, 1, -1, 1}, {1, -1, -1, 1, 1}};
             int[] t = {1, 1, -1, -1};

             double [][] w ={{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                     ,{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                     ,{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};


          int i, n = 0, o = 1;
             double y_in, y, a = 1, w1 = 0, w2 = 0, w3 = 0, w4 = 0, b = 0, teta = 0.2;



             int sw = 1;
             while (sw == 1) {
                 sw = 0;

                 n++;
                 System.out.printf("n=%d\n", n);

                 for (i = 0; i < 4; i++) {
                     y_in = w1 * x[i][0] + w2 * x[i][1] + w3 * x[i][2] + w4 * x[i][3] + b * x[i][4];

                     if (y_in > teta)
                         y = 1;
                     else if (y_in < -teta)
                         y = -1;
                     else
                         y = 0;

                     if (y != t[i]) {
                         w1 = w1 + a * x[i][0] * (t[i]);
                         w2 = w2 + a * x[i][1] * (t[i]);
                         w3 = w3 + a * x[i][2] * (t[i]);
                         w4 = w4 + a * x[i][3] * (t[i]);
                         b = b + a * x[i][4] * (t[i]);
                         sw = 1;
                     }

                     System.out.printf("y=%f t=%d   w1=%f w2=%f w3=%f w4=%f b=%f", y, t[i], w1, w2, w3, w4, b);
                     System.out.printf("\n------------------------\n");
                 }
             }
             System.out.printf("------------------------\n\n");
         }
     
}
